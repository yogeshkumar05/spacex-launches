{"version":3,"sources":["dashboard/duck/reduxSlice.js","dashboard/duck/logic.js","utils/constants.js","dashboard/styles.js","dashboard/DashboardTile.jsx","components/HeaderSearch.jsx","components/DisplayCount.jsx","components/Loader.jsx","dashboard/DashboardComponent.jsx","dashboard/DashboardContainer.js","dashboard/duck/operations.js","App.js","reportWebVitals.js","reduxStore.js","index.js"],"names":["counterSlice","createSlice","name","initialState","launches","filteredLaunches","isLoading","reducers","fetchLaunchData","state","action","payload","filterLaunchData","filteredData","data","key","filter","entry","rocket","rocket_name","toLowerCase","indexOf","filterLaunches","actions","constants","FLIGHT_NUMBER","LAUNCH_DATE","LAUNCH_STATUS","ROCKET_NAME","DEFAULT_IMG_URL","SUCCESS","FAILURE","cardStyles","makeStyles","theme","root","margin","breakpoints","down","width","up","cardContainer","display","justifyContent","media","height","paddingTop","DashboardTile","props","launchData","flight_number","details","launch_date_unix","launch_success","mission_name","flickr_images","links","classes","subHeader","className","Card","CardHeader","title","subheader","CardMedia","image","CardContent","Typography","variant","color","component","useStyles","menuButton","marginRight","spacing","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","PrimarySearchAppBar","onSearchChanged","AppBar","Toolbar","noWrap","InputBase","onChange","placeholder","input","inputProps","DisplayCount","total","filtered","CircularUnderLoad","CircularProgress","disableShrink","DashboardComponent","handleSearchChange","e","getFilteredData","target","value","this","getLaunchData","length","map","launch","Component","defaultProps","connect","dashoard","dispatch","_","fetch","then","response","json","catch","error","console","searchKey","getState","getFilteredLaunches","App","DashboardContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","dashoardReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.e435b6ba.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {\n  filterLaunches\n} from './logic';\n\nexport const counterSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    launches: [],\n    filteredLaunches: [],\n    isLoading: true,\n  },\n  reducers: {\n    fetchLaunchData: (state, action) => {\n      state.launches = [...action.payload];\n      state.filteredLaunches = [...action.payload];\n      state.isLoading = false;\n    },\n    filterLaunchData: (state, action) => {\n      const filteredData = filterLaunches({...action.payload});\n      state.filteredLaunches = [...filteredData];\n    }\n  },\n})\n\nexport const {\n  fetchLaunchData,\n  filterLaunchData\n} = counterSlice.actions\n\nexport default counterSlice.reducer","export const filterLaunches = ({ data, key }) => data.filter((entry) => entry.rocket.rocket_name.toLowerCase().indexOf(key.toLowerCase()) > -1);","const constants = {\n  FLIGHT_NUMBER: 'Flight number',\n  LAUNCH_DATE: 'Launch date',\n  LAUNCH_STATUS: 'Launch status',\n  ROCKET_NAME: 'Rocket name',\n  DEFAULT_IMG_URL: 'https://live.staticflickr.com/65535/50291453997_aa715950e7_o.jpg',\n  SUCCESS: 'Success',\n  FAILURE: 'Failure'\n}\n\nexport default constants;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const cardStyles = makeStyles((theme) => ({\n  root: {\n    margin: 30,\n    [theme.breakpoints.down('xs')]: {\n      width: 400,\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 500,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 800,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 900,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1000,\n    },\n  },\n  cardContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n}));\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport constants from '../utils/constants';\nimport {\n  cardStyles\n} from './styles';\n\nexport default function DashboardTile(props) {\n  const {\n    launchData: {\n      flight_number,\n      details,\n      launch_date_unix,\n      launch_success,\n      mission_name,\n      rocket: {\n        rocket_name\n      },\n      links: {\n        flickr_images\n      }\n    }\n  } = props;\n\n  const {\n    FLIGHT_NUMBER,\n    LAUNCH_DATE,\n    LAUNCH_STATUS,\n    ROCKET_NAME,\n    DEFAULT_IMG_URL,\n    SUCCESS,\n    FAILURE\n  } = constants\n  const classes = cardStyles();\n\n  let subHeader = <div>\n    <div>\n      {FLIGHT_NUMBER}: {flight_number}\n    </div>\n    <div>\n      {LAUNCH_DATE}: {launch_date_unix}\n    </div>\n    <div>\n      {LAUNCH_STATUS}: {launch_success ? SUCCESS : FAILURE}\n    </div>\n    <div>\n      {ROCKET_NAME}: {rocket_name}\n    </div>\n  </div>;\n\n  return (<div className={classes.cardContainer}>\n    <Card className={classes.root}>\n      <CardHeader\n        title={mission_name}\n        subheader={subHeader}\n      />\n\n      <CardMedia\n        className={classes.media}\n        image={flickr_images[0] || DEFAULT_IMG_URL}\n        title={mission_name}\n      />\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          {details}\n        </Typography>\n      </CardContent>\n    </Card>\n  </div>\n  );\n}\n\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '50%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: '50%',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '50%',\n    [theme.breakpoints.up('md')]: {\n      width: '70ch',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const classes = useStyles();\n  const {\n    onSearchChanged\n  } = props;\n\n\n  return (\n    <div >\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            SpaceX Launches\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onChange={onSearchChanged}\n              placeholder=\"Search by Rocket name..\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst DisplayCount = (props) => {\n  const {\n    total,\n    filtered\n  } = props;\n\n  return (<div className='display-count'>Showing {filtered} of {total} entries</div>)\n}\n\nexport default DisplayCount;","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function CircularUnderLoad() {\n  return <CircularProgress disableShrink />;\n}\n","\nimport React, { Component } from 'react';\nimport DashboardTile from './DashboardTile';\nimport SearchBar from '../components/HeaderSearch';\nimport DisplayCount from '../components/DisplayCount';\nimport Loader from '../components/Loader';\nimport PropTypes from 'prop-types';\nexport default class DashboardComponent extends Component {\n\n  componentDidMount() {\n    this.props.getLaunchData();\n  }\n\n  handleSearchChange = (e) => {\n    this.props.getFilteredData(e.target.value);\n  }\n\n  render() {\n    const {\n      filteredLaunches,\n      launches,\n      isLoading\n    } = this.props;\n\n    return (\n      <div className='App'>\n        <SearchBar onSearchChanged={this.handleSearchChange} />\n        <div className='app-container'>\n        {\n          isLoading ? <Loader /> :\n            <>\n              <DisplayCount total={launches.length} filtered={filteredLaunches.length} />\n              {\n                filteredLaunches.map(launch => <DashboardTile launchData={launch} key={launch.mission_name}/>)\n              }\n            </>\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboardComponent.propTypes = {\n  filteredLaunches: PropTypes.array,\n  launches: PropTypes.array,\n  isLoading: PropTypes.bool,\n  getLaunchData: PropTypes.func,\n  getFilteredData: PropTypes.func\n};\nDashboardComponent.defaultProps = {\n  filteredLaunches: [],\n  launches: [],\n  isLoading: true,\n  getLaunchData: () => {},\n  getFilteredData: () => {},\n}\n\n","import { connect } from 'react-redux';\nimport { \n  getLaunches,\n  getFilteredLaunches\n} from './duck/operations';\nimport DashboardComponent from './DashboardComponent';\n\nconst mapStateToProps = (state) => {\n  const {\n    launches,\n    filteredLaunches,\n    isLoading\n  } = state.dashoard;\n\n  return {\n    launches,\n    filteredLaunches,\n    isLoading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLaunchData: _ => dispatch(getLaunches()),\n    getFilteredData: searchKey => dispatch(getFilteredLaunches(searchKey))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardComponent);\n","import {\n  fetchLaunchData,\n  filterLaunchData\n} from './reduxSlice';\n\nexport const getLaunches = () => (dispatch) => {\n  fetch('https://api.spacexdata.com/v3/launches')\n    .then(response => response.json())\n    .then(data => dispatch(fetchLaunchData(data)))\n    .catch(error => {\n      console.error(error);\n    });\n};\n\nexport const getFilteredLaunches = (searchKey) => (dispatch, getState) => {\n  const {\n    dashoard: {\n      launches\n    }\n  } = getState();\n\n  dispatch(filterLaunchData({ data: launches, key: searchKey }));\n}\n\n","\nimport React from 'react';\nimport DashboardContainer from './dashboard/DashboardContainer';\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <DashboardContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport dashoardReducer from './dashboard/duck/reduxSlice';\n\nexport default configureStore({\n  reducer: {\n    dashoard: dashoardReducer\n  },\n})","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './reduxStore';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}